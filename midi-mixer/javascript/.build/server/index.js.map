{"version":3,"names":["Server","filesystemPlugin","loadConfig","fs","path","JZZ","removeMaxTrack","createMaxTrack","nameMaxTrack","dumpMaxTrack","OscServer","Client","OscClient","Bundle","_","JSON5","userToRaw","rawToUser","getFaderRange","parseTrackConfig","trackSchema","globalsSchema","onMidiOutFail","onMidiInFail","getMidiDeviceList","onFaderMove","displayUserFader","setFaderView","setMixerView","config","process","env","ENV","import","meta","url","console","log","app","name","pid","server","tracks","useDefaultApplicationTemplate","pluginManager","register","dirname","start","oscServer","stateManager","registerSchema","globals","create","midiInPort","midiOutPort","onMidiInSuccess","close","midiInName","set","source","onMidiOutSuccess","midiOutName","and","info","logger","Widget","_receive","onMidiReceive","onUpdate","updates","oldValues","context","selectMidiIn","input","openMidiIn","or","connect","selectMidiOut","openMidiOut","controllerName","fader","controllerFader","controllersFolder","readdirSync","resolve","cwd","selectControllers","forEach","e","push","split","shift","filesystem","get","tree","getTree","midiConfigFilename","children","find","f","midiConfig","parse","readFileSync","channels","map","parseInt","channel","sort","a","b","maxTrackIndex","Math","max","length","i","newValues","onTrackUpdate","includes","disabled","track","s","delete","pop","midiConfigLine","registerUpdateHook","currentValues","key","Object","keys","id","user","raw","bytes","pow","faderUser","faderBytes","faderRaw","bundle","oscClient","send","on","msg","address","header","t","undefined","valueType","value","parseFloat","toString"],"sources":["../../src/server/index.js"],"sourcesContent":["import '@soundworks/helpers/polyfills.js';\nimport { Server } from '@soundworks/core/server.js';\nimport filesystemPlugin from '@soundworks/plugin-filesystem/server.js';\n\nimport { loadConfig } from '../utils/load-config.js';\nimport '../utils/catch-unhandled-errors.js';\n\nimport fs from 'fs';\nimport path from 'path';\n\nimport JZZ from 'jzz';\nimport { removeMaxTrack, createMaxTrack, nameMaxTrack, dumpMaxTrack } from './maxCommunicator.js';\nimport { Server as OscServer, Client as OscClient, Bundle } from 'node-osc';\nimport _ from 'lodash';\nimport JSON5 from 'json5';\n\nimport { userToRaw, rawToUser, getFaderRange, parseTrackConfig } from './helpers.js';\nimport { trackSchema } from './schemas/tracks.js';\nimport { globalsSchema } from './schemas/globals.js';\nimport { onMidiOutFail, onMidiInFail, getMidiDeviceList, onFaderMove, displayUserFader, setFaderView, setMixerView } from './midi.js';\n\n// - General documentation: https://soundworks.dev/\n// - API documentation:     https://soundworks.dev/api\n// - Issue Tracker:         https://github.com/collective-soundworks/soundworks/issues\n// - Wizard & Tools:        `npx soundworks`\n\nconst config = loadConfig(process.env.ENV, import.meta.url);\n\nconsole.log(`\n--------------------------------------------------------\n- launching \"${config.app.name}\" in \"${process.env.ENV || 'default'}\" environment\n- [pid: ${process.pid}]\n--------------------------------------------------------\n`);\n\n/**\n * Initialisation process\n */\nconst server = new Server(config);\nconst tracks = [];\n\n// configure the server for usage within this application template\nserver.useDefaultApplicationTemplate();\n\nserver.pluginManager.register('filesystem', filesystemPlugin, {\n  dirname: 'midi-config',\n});\n\nawait server.start();\n\n// Create an osc UDP Port listening on port 3333.\nconst oscServer = new OscServer(3333, '0.0.0.0', () => {\n  console.log('OSC Server is listening on 3333');\n});\n\n// register tracks\nserver.stateManager.registerSchema('track', trackSchema);\nserver.stateManager.registerSchema('globals', globalsSchema);\n// register globals\nconst globals = await server.stateManager.create('globals');\n\n// initialise midi lib\nlet midiInPort;\nlet midiOutPort;\n\nfunction onMidiInSuccess() {\n  if (midiInPort) {\n    midiInPort.close();\n  }\n  midiInPort = this;\n  const midiInName = this.name();\n  globals.set({ midiInName: midiInName }, {source:'server'});\n  console.log(`- Midi Input Device: ${midiInName}`);\n}\n\nfunction onMidiOutSuccess() {\n  if (midiOutPort) {\n    midiOutPort.close();\n  }\n  midiOutPort = this;\n  const midiOutName = this.name();\n  globals.set({ midiOutName: midiOutName }, {source:'server'});\n  console.log(`- Midi Output Device: ${midiOutName}`);\n}\n\nJZZ().and(function() {\n  const info = this.info();\n  getMidiDeviceList(info, globals);\n});\n\nconst logger = JZZ.Widget({ _receive: onMidiReceive });\n\nglobals.onUpdate(async (updates, oldValues, context) => {\n  if ('midiInName' in updates) {\n    let name = updates.midiInName;\n    if (name === null) {\n      name = updates.selectMidiIn[0]\n    }\n    const input = JZZ().openMidiIn(name).or(onMidiInFail).and(onMidiInSuccess);\n    input.connect(logger);\n  };\n  if ('midiOutName' in updates) {\n    let name = updates.midiOutName;\n    if (name === null) {\n      name = updates.selectMidiOut[0]\n    }\n    JZZ().openMidiOut(name).or(onMidiOutFail).and(onMidiOutSuccess);\n  };\n  if (updates.controllerName) {\n    const { fader } = await import (`./controllers/${updates.controllerName}.js`);\n    controllerFader = fader;\n    console.log(`- Updated controller ${updates.controllerName}`);\n  };\n}, true);\n\n// _____________________\n\n// initialise controllers\nlet controllerFader;\nconst controllersFolder = fs.readdirSync(path.resolve(process.cwd(),'./src/server/controllers'));\nconst selectControllers = [];\ncontrollersFolder.forEach(e => {\n  selectControllers.push(e.split('.').shift());\n});\nglobals.set({ selectControllers: selectControllers });\nglobals.set({ controllerName: selectControllers[0] });\n\n// grab config file an init states\nconst filesystem = await server.pluginManager.get('filesystem');\n\nfilesystem.onUpdate(async updates => {\n  const tree = filesystem.getTree();\n  const midiConfigFilename = tree.children.find(f => f.name === 'example-1.json').path;\n  const midiConfig = JSON5.parse(fs.readFileSync(midiConfigFilename));\n\n  globals.set({ config: midiConfig });\n\n  const channels = midiConfig\n    .map(tracks => parseInt(tracks.channel))\n    .sort((a, b) => a < b ? -1 : 1);\n\n  const maxTrackIndex = Math.max(...channels);\n\n  if (maxTrackIndex + 1 > tracks.length) {\n    console.log(`- create track from ${tracks.length} to ${maxTrackIndex}`);\n    // create new states\n    for (let i = tracks.length; i < maxTrackIndex + 1; i++) {\n      tracks[i] = await server.stateManager.create('track');\n      tracks[i].onUpdate((newValues, oldValues, context) => {\n        onTrackUpdate(newValues, oldValues, context, tracks[i]);\n      });\n\n      if (!channels.includes(i)) {\n        // create disabled track\n        await tracks[i].set({\n          channel: i,\n          disabled: true\n        }, { source: 'config' });\n      } else {\n        // create enabled track\n        await tracks[i].set({\n          channel: i,\n          disabled: false,\n        }, { source: 'config' });\n        // create max track\n      }\n\n      createMaxTrack(tracks[i]);\n\n    }\n  } else {\n    console.log(`- delete track from ${maxTrackIndex + 1} to ${tracks.length - 1}`);\n    for (let i = tracks.length - 1; i > maxTrackIndex; i--) {\n      const track = tracks.find(s => s.get('channel') === i);\n      // delete max track\n      removeMaxTrack(track);\n      await track.delete();\n      tracks.pop();\n    }\n  }\n\n  // remove old states\n  tracks.forEach(async track => {\n    const channel = track.get('channel');\n    if (track.get('disabled') === true) { return };\n    if (!channels.includes(channel)) {\n      console.log('- disable track:', channel);\n      await track.set({\n        name: null,\n        disabled: true,\n      }, {source:'config'});\n      nameMaxTrack(track);\n    }\n  });\n\n  // apply updates on changed state\n  channels.forEach(async channel => {\n    const track = tracks.find(s => s.get('channel') === channel);\n    console.log(`update channel ${track.get('channel')}`);\n    const midiConfigLine = midiConfig.find(f => f.channel === channel);\n    const updates = parseTrackConfig(midiConfigLine);\n    await track.set(updates, {source:'config'});\n\n    nameMaxTrack(track);\n\n  });\n\n}, true);\n// ________________________________\n// hook\n// ________________________________\n\nserver.stateManager.registerUpdateHook('track', async (updates, currentValues, context) => {\n  // hook compute each fader values\n  if (context.source !== 'hook') {\n    const key = Object.keys(updates)[0];\n    const input = updates[key];\n    const id = currentValues.id;\n    let user = null;\n    let raw = null;\n    let bytes = null;\n\n    if (key === 'faderRaw') {\n      user = rawToUser(input, controllerFader, currentValues);\n      bytes = parseInt(input * (Math.pow(2,14) - 1));\n      raw = input;\n    } else if (key === 'faderUser') {\n      raw = userToRaw(input, controllerFader, currentValues);\n      bytes = parseInt(raw * (Math.pow(2,14) - 1));\n      user = input;\n    } else if (key === 'faderBytes') {\n      raw = input / (Math.pow(2, 14) - 1);\n      user = rawToUser(raw, controllerFader, currentValues);\n      bytes = input;\n    }\n\n    return {\n      ...updates,\n      faderUser: user,\n      faderBytes: bytes,\n      faderRaw : raw,\n    };\n  }\n});\n\n// _______________________________\n// listening for incoming soundworks updates\n// _______________________________\nfunction onTrackUpdate(newValues, oldValues, context, track) {\n  if (context.source !== 'midi') {\n    setFaderView(track.get('channel'), globals.get('activePage'), tracks);\n  }\n  if (context.source !== 'osc') {\n    const bundle = new Bundle(\n      [`/track/${track.get('channel')}/fader/user`, track.get('faderUser')],\n      [`/track/${track.get('channel')}/fader/raw`, track.get('faderRaw')],\n      [`/track/${track.get('channel')}/fader/bytes`, track.get('faderBytes')]\n    );\n\n    const oscClient = new OscClient('127.0.0.1', 3334);\n    oscClient.send(bundle, () => {\n      oscClient.close();\n    });\n  }\n}\n\noscServer.on('message', function (msg) {\n  const address = msg[0].split('/');\n  address.shift();\n  const header = address[0];\n  if (header === 'track') {\n    const channel = parseInt(address[1]);\n    const track = tracks.find(t => t.get('channel') === channel);\n    if (track !== undefined) {\n      if (address[2] === 'fader') {\n        const valueType = address[3];\n        if (valueType === 'user') {\n          const value = parseFloat(msg[1]);\n          track.set({ faderUser: value }, {source: 'osc'});\n        } else if (valueType === 'raw') {\n          const value = parseFloat(msg[1]);\n          track.set({ faderRaw: value }, {source: 'osc'});\n        } else if (valueType === 'bytes') {\n          const value = parseFloat(msg[1]);\n          track.set({ faderBytes: value}, {source: 'osc'});\n        }\n      }\n    }\n  } else if (header === 'config') {\n    tracks.forEach(track => {\n      dumpMaxTrack(track);\n    });\n  }\n});\n\n// _______________________\n// listening for updates on midi side\n// _______________________\n// MCU.controlMap({\n//   'button': {\n//     'down': {\n//       'FADER BANK RIGHT': function() {\n//         const idMap = tracks.map(t => t.get('trackId'));\n//         const lastFader = idMap[idMap.length - 1];\n//         const activePage = globals.get('activePage');\n//         const lastPage = Math.floor((lastFader - 1) / 8);\n//         if (activePage < lastPage) {\n//           globals.set({ activePage: activePage + 1 }, {source:'midi'});\n//           setMixerView(globals.get('activePage'), tracks);\n//         }\n//        },\n//       'FADER BANK LEFT': function() {\n//         const activePage = globals.get('activePage');\n//         if (activePage > 0) {\n//           globals.set({ activePage: activePage - 1 }, {source: 'midi'});\n//           setMixerView(globals.get('activePage'), tracks);\n//         }\n//       },\n//     },\n//   },\n//   'fader': function(name, state) {\n//     onFaderMove(name, state, globals.get('activePage'), tracks);\n//     displayUserFader(globals.get('activePage'), tracks);\n//   },\n// });\n\nfunction onMidiReceive(msg) {\n  console.log(msg.toString());\n}\n\n\n"],"mappings":"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"}
