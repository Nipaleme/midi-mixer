import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import curve_fit

figure, axis = plt.subplots(1, 2)

x = np.arange(0, 169, 1, dtype=int)
scaled_x = [(i / 168 * 127) for i in x]

#selection de deuxi√®me colonnes de notre dataset
# Y = np.arange(0, 127, 1, dtype=int)
y = [0,0.000032,0.000063,0.000126,0.000251,0.000501,0.001,0.001413,0.001995,0.002818,0.003981,0.005012,0.00631,0.007943,0.008913,0.01,0.01122,0.012589,0.014125,0.015849,0.016788,0.017783,0.018836,0.019953,0.021135,0.022387,0.023714,0.025119,0.026607,0.028184,0.029854,0.031623,0.033497,0.035481,0.037584,0.039811,0.04217,0.044668,0.047315,0.050119,0.053088,0.056234,0.059566,0.063096,0.065564,0.068129,0.070795,0.073564,0.076442,0.079433,0.08254,0.08577,0.089125,0.092612,0.096235,0.1,0.103912,0.107978,0.112202,0.116591,0.121153,0.125893,0.130818,0.135936,0.141254,0.14678,0.152522,0.158489,0.16469,0.171133,0.177828,0.184785,0.192014,0.199526,0.207332,0.215443,0.223872,0.232631,0.241732,0.251189,0.258523,0.266073,0.273842,0.281838,0.290068,0.298538,0.307256,0.316228,0.325462,0.334965,0.344747,0.354813,0.365174,0.375837,0.386812,0.398107,0.409732,0.421697,0.43401,0.446684,0.459727,0.473151,0.486968,0.501187,0.515822,0.530884,0.546387,0.562341,0.578762,0.595662,0.613056,0.630957,0.649382,0.668344,0.68786,0.707946,0.728618,0.749894,0.771792,0.794328,0.817523,0.841395,0.865964,0.891251,0.917276,0.944061,0.971628,1.,1.035142,1.071519,1.109175,1.148154,1.188502,1.230269,1.273503,1.318257,1.364583,1.412538,1.462177,1.513561,1.566751,1.62181,1.678804,1.737801,1.798871,1.862087,1.927525,1.995262,2.06538,2.137962,2.213095,2.290868,2.371374,2.454709,2.540973,2.630268,2.722701,2.818383,2.917427,3.02,3.12608,3.235936,3.349654,3.467369,3.589219,3.715353,3.845918,3.981072,4]


x_reaper = np.arange(0, 128, 1, dtype=int)
y_reaper = [0.00000003,0.00000562,0.00001718,0.00004571,0.00009441,0.00014791,0.00030903,0.00046774,0.00060954,0.00078524,0.00123027,0.00131826,0.00169824,0.00229087,0.00305492,0.00338844,0.00421697,0.00501187,0.00645654,0.00707946,0.00812831,0.00891251,0.01096478,0.01188502,0.01333521,0.01531087,0.01717908,0.02065380,0.02113489,0.02398833,0.02786121,0.02985383,0.03273407,0.03672823,0.04073803,0.04466836,0.04786301,0.05188000,0.05754399,0.06095369,0.06531306,0.07244360,0.07413102,0.07852356,0.08609938,0.09120108,0.09772372,0.10715193,0.11614486,0.12445146,0.13182567,0.13803843,0.14791084,0.15667511,0.16595869,0.17179084,0.18197009,0.19275249,0.20417379,0.21877616,0.23173946,0.25118864,0.26302680,0.27861212,0.29512092,0.30549211,0.31622777,0.33265955,0.34954251,0.36517413,0.39309724,0.40738028,0.43251383,0.45656225,0.46989411,0.48977882,0.52480746,0.53088444,0.55911353,0.57809605,0.61517687,0.65012969,0.67220231,0.69103493,0.73790423,0.76207901,0.79158945,0.82129655,0.85703785,0.89949758,0.95279616,1.00000000,1.02920053,1.07275365,1.14156330,1.18850223,1.22461620,1.26182753,1.33352143,1.35363009,1.40928880,1.47400854,1.57036280,1.60140065,1.64058977,1.72981636,1.82389570,1.85139889,1.96110118,2.05589060,2.08449088,2.15526164,2.23872114,2.37684029,2.44624528,2.52638771,2.63329794,2.69463533,2.84773780,2.92415238,3.00607630,3.10098739,3.27340695,3.34965439,3.46736850,3.58921935,3.75837404,3.93550075]

x_live = np.arange(0, 128, 1, dtype=int)
y_live = [0.,0.00051286,0.00054325,0.00079433,0.00094406,0.00112202,0.00130317,0.00171791,0.00201837,0.00239883,0.00275423,0.00323594,0.00367282,0.00426580,0.00495450,0.00524807,0.00638263,0.00707946,0.00767361,0.00881049,0.01047129,0.01174898,0.01303167,0.01412538,0.01603245,0.01862087,0.02041738,0.02290868,0.02454709,0.02985383,0.03126079,0.03467369,0.03758374,0.04027170,0.04518559,0.04841724,0.05188000,0.05623413,0.06025596,0.06760830,0.07244360,0.07762471,0.08317638,0.08810489,0.09225714,0.09885531,0.10232930,0.10715193,0.10964782,0.11885022,0.12161860,0.12589254,0.13031668,0.13489629,0.13963684,0.14621772,0.15135612,0.15848932,0.16218101,0.16788040,0.17378008,0.18407720,0.18836491,0.19498446,0.19952623,0.20892961,0.21379621,0.22387211,0.23713737,0.23988329,0.24831331,0.25703958,0.27227013,0.27861212,0.28840315,0.30199517,0.30902954,0.32734069,0.33496544,0.35075187,0.36307805,0.38018940,0.39355008,0.40271703,0.41686938,0.43651583,0.44668359,0.46238102,0.47863009,0.49545019,0.51286138,0.53088444,0.55590426,0.57543994,0.58884366,0.61659500,0.64565423,0.66069345,0.68391165,0.69984200,0.74989421,0.77624712,0.80352612,0.81283052,0.84139514,0.88104887,0.91201084,0.94406088,0.97723722,1.01157945,1.05925373,1.09647820,1.12201845,1.17489755,1.21618600,1.25892541,1.30316678,1.34896288,1.41253754,1.46217717,1.49623566,1.56675107,1.62181010,1.69824365,1.73780083,1.81970086,1.86208714,1.99526231]

x_protools = np.arange(0, 128, 1, dtype=int)
y_protools = [0.,0.00001000,0.00007413,0.00014289,0.00023174,0.00040738,0.00050699,0.00063826,0.00079433,0.00107152,0.00167880,0.00208930,0.00263027,0.00350752,0.00473151,0.00638263,0.00933254,0.01059254,0.01135011,0.01202264,0.01318257,0.01396368,0.01531087,0.01659587,0.01757924,0.01883649,0.02113489,0.02317395,0.02454709,0.02600160,0.02722701,0.03054921,0.03235937,0.03548134,0.03758374,0.03981072,0.04365158,0.04623810,0.05188000,0.05432503,0.05888437,0.06237348,0.06683439,0.07244360,0.07762471,0.08511380,0.09332543,0.09772372,0.10351422,0.11091748,0.11748976,0.12161860,0.12589254,0.13182567,0.13803843,0.14288940,0.15135612,0.16218101,0.16982437,0.17579236,0.18620871,0.19498446,0.20183664,0.20892961,0.22908677,0.23442288,0.24547089,0.26302680,0.26915348,0.27861212,0.29174270,0.30549211,0.32359366,0.34673685,0.35892193,0.37583740,0.39355008,0.42169650,0.44157045,0.46773514,0.47315126,0.50118723,0.52480746,0.54325033,0.56885293,0.60255959,0.63095734,0.65313055,0.69183097,0.74131024,0.77624712,0.80352612,0.84139514,0.88104887,0.91201084,0.95499259,1.00000000,1.05925373,1.09647820,1.18850223,1.23026877,1.25892541,1.31825674,1.38038426,1.44543977,1.49623566,1.56675107,1.64058977,1.69824365,1.77827941,1.84077200,1.97242274,2.06538016,2.11348904,2.26464431,2.29086765,2.37137371,2.57039578,2.66072506,2.81838293,2.88403150,3.01995172,3.19889511,3.27340695,3.34965439,3.50751874,3.71535229,3.93550075]

x_logic = np.arange(0, 128, 1, dtype=int)
y_logic = [0.,0.00007499,0.00007586,0.00095499,0.00112202,0.00125893,0.00144544,0.00171791,0.00186209,0.00218776,0.00257040,0.00323594,0.00350752,0.00393550,0.00446684,0.00501187,0.00575440,0.00660693,0.00812831,0.00922571,0.01071519,0.01161449,0.01445440,0.01678804,0.01840772,0.01995262,0.02137962,0.02264644,0.02398833,0.02630268,0.02884032,0.03273407,0.03467369,0.03890451,0.04570882,0.04841724,0.05432503,0.05956621,0.06760830,0.07852356,0.08609938,0.10000000,0.10715193,0.11220185,0.12022644,0.12882496,0.13489629,0.14791084,0.15310875,0.16032454,0.17179084,0.18197009,0.19275249,0.20892961,0.21877616,0.23988329,0.25409727,0.26607251,0.28510183,0.30902954,0.31988951,0.33113112,0.33884416,0.34673685,0.35481339,0.36307805,0.37583740,0.38459178,0.39810717,0.40738028,0.42169650,0.43151908,0.44157045,0.45185594,0.46238102,0.47315126,0.48417237,0.49545019,0.51286138,0.53088444,0.54325033,0.55590426,0.56885293,0.59566214,0.62373484,0.64565423,0.66834392,0.69183097,0.71614341,0.74989421,0.77624712,0.80352612,0.81283052,0.87096359,0.89125094,0.93325430,0.96605088,1.00000000,1.03514217,1.07151931,1.10917482,1.16144861,1.20226443,1.23026877,1.27350308,1.33352143,1.38038426,1.44543977,1.49623566,1.49623566,1.62181010,1.67880402,1.73780083,1.77827941,1.86208714,1.94984460,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231,1.99526231]

#SSL
x_pyramix = np.arange(0, 512, 1, dtype=int)
x_pyramix_scale = [(i / 512 * 127) for i in x_pyramix]
y_pyramix_db = [-144.50,-140.98,-137.46,-133.94,-130.42,-126.90,-123.38,-119.85,-116.33,-112.81,-109.29,-105.77,-102.25,-98.73,-95.21,-91.69,-88.17,-84.65,-81.13,-77.60,-74.08,-70.56,-67.04,-63.52,-60.00,-59.69,-59.38,-59.06,-58.75,-58.44,-58.13,-57.81,-57.50,-57.19,-56.88,-56.56,-56.25,-55.94,-55.63,-55.31,-55.00,-54.69,-54.38,-54.06,-53.75,-53.44,-53.13,-52.81,-52.50,-52.19,-51.88,-51.56,-51.25,-50.94,-50.63,-50.31,-50.00,-49.69,-49.38,-49.06,-48.75,-48.44,-48.13,-47.81,-47.50,-47.19,-46.88,-46.56,-46.25,-45.94,-45.63,-45.31,-45.00,-44.69,-44.38,-44.06,-43.75,-43.44,-43.13,-42.81,-42.50,-42.19,-41.88,-41.56,-41.25,-40.94,-40.63,-40.31,-40.00,-39.84,-39.68,-39.52,-39.36,-39.20,-39.04,-38.88,-38.72,-38.56,-38.40,-38.24,-38.09,-37.93,-37.77,-37.61,-37.45,-37.29,-37.13,-36.97,-36.81,-36.65,-36.49,-36.33,-36.17,-36.01,-35.85,-35.69,-35.53,-35.37,-35.21,-35.05,-34.89,-34.73,-34.57,-34.41,-34.26,-34.10,-33.94,-33.78,-33.62,-33.46,-33.30,-33.14,-32.98,-32.82,-32.66,-32.50,-32.34,-32.18,-32.02,-31.86,-31.70,-31.54,-31.38,-31.22,-31.06,-30.90,-30.74,-30.59,-30.43,-30.27,-30.11,-29.95,-29.79,-29.63,-29.47,-29.31,-29.15,-28.99,-28.83,-28.67,-28.51,-28.35,-28.19,-28.03,-27.87,-27.71,-27.55,-27.39,-27.23,-27.07,-26.91,-26.76,-26.60,-26.44,-26.28,-26.12,-25.96,-25.80,-25.64,-25.48,-25.32,-25.16,-25.00,-24.84,-24.68,-24.52,-24.36,-24.20,-24.04,-23.88,-23.72,-23.56,-23.40,-23.24,-23.09,-22.93,-22.77,-22.61,-22.45,-22.29,-22.13,-21.97,-21.81,-21.65,-21.49,-21.33,-21.17,-21.01,-20.85,-20.69,-20.53,-20.37,-20.21,-20.05,-19.89,-19.73,-19.57,-19.41,-19.26,-19.10,-18.94,-18.78,-18.62,-18.46,-18.30,-18.14,-17.98,-17.82,-17.66,-17.50,-17.34,-17.18,-17.02,-16.86,-16.70,-16.54,-16.38,-16.22,-16.06,-15.90,-15.74,-15.59,-15.43,-15.27,-15.11,-14.95,-14.79,-14.63,-14.47,-14.31,-14.15,-13.99,-13.83,-13.67,-13.51,-13.35,-13.19,-13.03,-12.87,-12.71,-12.55,-12.39,-12.23,-12.07,-11.91,-11.76,-11.60,-11.44,-11.28,-11.12,-10.96,-10.80,-10.64,-10.48,-10.32,-10.16,-10.00,-9.92,-9.84,-9.75,-9.67,-9.59,-9.51,-9.43,-9.34,-9.26,-9.18,-9.10,-9.02,-8.93,-8.85,-8.77,-8.69,-8.61,-8.52,-8.44,-8.36,-8.28,-8.20,-8.11,-8.03,-7.95,-7.87,-7.79,-7.70,-7.62,-7.54,-7.46,-7.38,-7.30,-7.21,-7.13,-7.05,-6.97,-6.89,-6.80,-6.72,-6.64,-6.56,-6.48,-6.39,-6.31,-6.23,-6.15,-6.07,-5.98,-5.90,-5.82,-5.74,-5.66,-5.57,-5.49,-5.41,-5.33,-5.25,-5.16,-5.08,-5.00,-4.92,-4.84,-4.75,-4.67,-4.59,-4.51,-4.43,-4.34,-4.26,-4.18,-4.10,-4.02,-3.93,-3.85,-3.77,-3.69,-3.61,-3.52,-3.44,-3.36,-3.28,-3.20,-3.11,-3.03,-2.95,-2.87,-2.79,-2.70,-2.62,-2.54,-2.46,-2.38,-2.30,-2.21,-2.13,-2.05,-1.97,-1.89,-1.80,-1.72,-1.64,-1.56,-1.48,-1.39,-1.31,-1.23,-1.15,-1.07,-0.98,-0.90,-0.82,-0.74,-0.66,-0.57,-0.49,-0.41,-0.33,-0.25,-0.16,-0.08,0.00,0.08,0.15,0.23,0.30,0.38,0.45,0.53,0.61,0.68,0.76,0.83,0.91,0.98,1.06,1.14,1.21,1.29,1.36,1.44,1.52,1.59,1.67,1.74,1.82,1.89,1.97,2.05,2.12,2.20,2.27,2.35,2.42,2.50,2.58,2.65,2.73,2.80,2.88,2.95,3.03,3.11,3.18,3.26,3.33,3.41,3.48,3.56,3.64,3.71,3.79,3.86,3.94,4.02,4.09,4.17,4.24,4.32,4.39,4.47,4.55,4.62,4.70,4.77,4.85,4.92,5.00,5.15,5.30,5.45,5.60,5.74,5.89,6.04,6.19,6.34,6.49,6.64,6.79,6.94,7.09,7.23,7.38,7.53,7.68,7.83,7.98,8.13,8.28,8.43,8.57,8.72,8.87,9.02,9.17,9.32,9.47,9.62,9.77,9.91,10.06,10.21,10.36,10.51,10.66,10.81,10.96,11.11,11.26,11.40,11.55,11.70,11.85,12.00]

x_dm2000 = np.arange(0, 512, 1, dtype=int)
x_dm2000_scale = [(i / 512 * 127) for i in x_pyramix]
y_dm2000_db = [-144.50,-140.39,-136.28,-132.17,-128.07,-123.96,-119.85,-115.74,-111.63,-107.52,-103.41,-99.30,-95.20,-91.09,-86.98,-82.87,-78.76,-74.65,-70.54,-66.43,-62.33,-58.22,-54.11,-50.00,-49.72,-49.44,-49.15,-48.87,-48.59,-48.31,-48.03,-47.75,-47.46,-47.18,-46.90,-46.62,-46.34,-46.06,-45.77,-45.49,-45.21,-44.93,-44.65,-44.37,-44.08,-43.80,-43.52,-43.24,-42.96,-42.68,-42.39,-42.11,-41.83,-41.55,-41.27,-40.99,-40.70,-40.42,-40.14,-39.86,-39.58,-39.30,-39.01,-38.73,-38.45,-38.17,-37.89,-37.61,-37.32,-37.04,-36.76,-36.48,-36.20,-35.92,-35.63,-35.35,-35.07,-34.79,-34.51,-34.23,-33.94,-33.66,-33.38,-33.10,-32.82,-32.54,-32.25,-31.97,-31.69,-31.41,-31.13,-30.85,-30.56,-30.28,-30.00,-29.80,-29.61,-29.41,-29.22,-29.02,-28.82,-28.63,-28.43,-28.24,-28.04,-27.84,-27.65,-27.45,-27.25,-27.06,-26.86,-26.67,-26.47,-26.27,-26.08,-25.88,-25.69,-25.49,-25.29,-25.10,-24.90,-24.71,-24.51,-24.31,-24.12,-23.92,-23.73,-23.53,-23.33,-23.14,-22.94,-22.75,-22.55,-22.35,-22.16,-21.96,-21.76,-21.57,-21.37,-21.18,-20.98,-20.78,-20.59,-20.39,-20.20,-20.00,-19.89,-19.78,-19.67,-19.57,-19.46,-19.35,-19.24,-19.13,-19.02,-18.91,-18.80,-18.70,-18.59,-18.48,-18.37,-18.26,-18.15,-18.04,-17.93,-17.83,-17.72,-17.61,-17.50,-17.39,-17.28,-17.17,-17.07,-16.96,-16.85,-16.74,-16.63,-16.52,-16.41,-16.30,-16.20,-16.09,-15.98,-15.87,-15.76,-15.65,-15.54,-15.43,-15.33,-15.22,-15.11,-15.00,-14.93,-14.85,-14.78,-14.71,-14.63,-14.56,-14.49,-14.41,-14.34,-14.26,-14.19,-14.12,-14.04,-13.97,-13.90,-13.82,-13.75,-13.68,-13.60,-13.53,-13.46,-13.38,-13.31,-13.24,-13.16,-13.09,-13.01,-12.94,-12.87,-12.79,-12.72,-12.65,-12.57,-12.50,-12.43,-12.35,-12.28,-12.21,-12.13,-12.06,-11.99,-11.91,-11.84,-11.76,-11.69,-11.62,-11.54,-11.47,-11.40,-11.32,-11.25,-11.18,-11.10,-11.03,-10.96,-10.88,-10.81,-10.74,-10.66,-10.59,-10.51,-10.44,-10.37,-10.29,-10.22,-10.15,-10.07,-10.00,-9.93,-9.85,-9.78,-9.71,-9.63,-9.56,-9.49,-9.41,-9.34,-9.26,-9.19,-9.12,-9.04,-8.97,-8.90,-8.82,-8.75,-8.68,-8.60,-8.53,-8.46,-8.38,-8.31,-8.24,-8.16,-8.09,-8.01,-7.94,-7.87,-7.79,-7.72,-7.65,-7.57,-7.50,-7.43,-7.35,-7.28,-7.21,-7.13,-7.06,-6.99,-6.91,-6.84,-6.76,-6.69,-6.62,-6.54,-6.47,-6.40,-6.32,-6.25,-6.18,-6.10,-6.03,-5.96,-5.88,-5.81,-5.74,-5.66,-5.59,-5.51,-5.44,-5.37,-5.29,-5.22,-5.15,-5.07,-5.00,-4.91,-4.83,-4.74,-4.66,-4.57,-4.48,-4.40,-4.31,-4.22,-4.14,-4.05,-3.97,-3.88,-3.79,-3.71,-3.62,-3.53,-3.45,-3.36,-3.28,-3.19,-3.10,-3.02,-2.93,-2.84,-2.76,-2.67,-2.59,-2.50,-2.41,-2.33,-2.24,-2.16,-2.07,-1.98,-1.90,-1.81,-1.72,-1.64,-1.55,-1.47,-1.38,-1.29,-1.21,-1.12,-1.03,-0.95,-0.86,-0.78,-0.69,-0.60,-0.52,-0.43,-0.34,-0.26,-0.17,-0.09,0.00,0.10,0.19,0.29,0.38,0.48,0.57,0.67,0.76,0.86,0.95,1.05,1.14,1.24,1.33,1.43,1.52,1.62,1.71,1.81,1.90,2.00,2.10,2.19,2.29,2.38,2.48,2.57,2.67,2.76,2.86,2.95,3.05,3.14,3.24,3.33,3.43,3.52,3.62,3.71,3.81,3.90,4.00,4.10,4.19,4.29,4.38,4.48,4.57,4.67,4.76,4.86,4.95,5.05,5.14,5.24,5.33,5.43,5.52,5.62,5.71,5.81,5.90,6.00,6.10,6.19,6.29,6.38,6.48,6.57,6.67,6.76,6.86,6.95,7.05,7.14,7.24,7.33,7.43,7.52,7.62,7.71,7.81,7.90,8.00,8.10,8.19,8.29,8.38,8.48,8.57,8.67,8.76,8.86,8.95,9.05,9.14,9.24,9.33,9.43,9.52,9.62,9.71,9.81,9.90,10.00,10.10,10.19,10.29,10.38,10.48,10.57,10.67,10.76,10.86,10.95,11.05,11.14,11.24,11.33,11.43,11.52,11.62,11.71,11.81,11.90,12.00]

y_db = 20*np.log10(y)
y_reaper_db = 20*np.log10(y_reaper)
y_live_db = 20*np.log10(y_live)
y_protools_db = 20*np.log10(y_protools)
y_logic_db = 20*np.log10(y_logic)
y_pyramix = [(pow(10, i / 20)) for i in y_pyramix_db]
y_dm2000 = [(pow(10, i / 20)) for i in y_dm2000_db]

#REAPER
# axis[0].plot(x_reaper,y_reaper_db,color='g')
#ANALOG
axis[0].plot(scaled_x,y_db,color='r')
#LIVE
# axis[0].plot(x_live,y_live_db,color='black')
#PROTOOLS
axis[0].plot(x_protools,y_protools_db,color='purple')
#LOGIC
# axis[0].plot(x_logic,y_logic_db,color='blue')
axis[0].plot(x_pyramix_scale, y_pyramix_db, color='grey')
axis[0].plot(x_dm2000_scale, y_dm2000_db, color='g')

# axis[1].plot(x_reaper,y_reaper,color='g')
axis[1].plot(scaled_x,y,color='r')
# axis[1].plot(x_live,y_live,color='black')
axis[1].plot(x_protools,y_protools,color='purple')
# axis[1].plot(x_logic,y_logic,color='blue')
axis[1].plot(x_pyramix_scale, y_pyramix, color='grey')
axis[1].plot(x_dm2000_scale, y_dm2000, color='g')

plt.show()


